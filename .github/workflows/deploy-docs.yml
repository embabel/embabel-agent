# This workflow will build a Ascii Doctor project with Maven, 
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Docs

on:
  workflow_dispatch:  # Enables manual triggering
    inputs:
      environment:
        description: 'Deploy Environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      vm_instance:
        description: 'VM Instance Name'
        required: true
        default: 'embabel-webserver'
        type: string
      vm_zone:
        description: 'VM Zone'
        required: true
        default: 'us-east1-b'
        type: string

env:
  PROJECT_ID: embabel-dev
  SERVICE_ACCOUNT: embabel-ci-build@embabel-dev.iam.gserviceaccount.com
  VM_INSTANCE: embabel-webserver

jobs:
  build:

    runs-on: ubuntu-latest

    # Set default working directory for all steps
    defaults:
      run:
        working-directory: ./embabel-agent-docs

    steps:
      - uses: actions/checkout@v4
      - name: Install Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven  
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn package

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS}}
          service_account: embabel-ci-build@embabel-dev.iam.gserviceaccount.com
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to VM with sudo
        run: |
          # Step 1: Copy to user's home directory first
          gcloud compute scp target/generated-docs/index.html \
            ${{ github.event.inputs.vm_instance }}:~/index.html \
            --zone=${{ github.event.inputs.vm_zone }}
          
          gcloud compute scp --recurse target/generated-docs/images \
            ${{ github.event.inputs.vm_instance }}:~/images \
            --zone=${{ github.event.inputs.vm_zone }}
          
          # Step 2: Move files with sudo via SSH
          gcloud compute ssh ${{ github.event.inputs.vm_instance }} \
            --zone=${{ github.event.inputs.vm_zone }} \
            --command="
              sudo mkdir -p /var/www/html/embabel-agent/guide &&
              sudo cp ~/index.html /var/www/html/embabel-agent/guide/ &&
              sudo cp -r ~/images /var/www/html/embabel-agent/guide
              "

      - name: Verify deployment
        run: |
          gcloud compute ssh ${{ github.event.inputs.vm_instance }} \
            --zone=${{ github.event.inputs.vm_zone }} \
            --command="
              echo 'Files in target directory:' &&
              sudo ls -la /var/www/html/embabel-agent/guide/ &&
              echo 'Testing web access:' &&
              curl -I http://localhost/embabel-agent/guide/index.html || echo 'Web server not responding'
            "
